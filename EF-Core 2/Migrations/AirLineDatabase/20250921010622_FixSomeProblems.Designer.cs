// <auto-generated />
using System;
using EF_Core_2.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Core_2.Migrations.AirLineDatabase
{
    [DbContext(typeof(AirLineDatabaseContext))]
    [Migration("20250921010622_FixSomeProblems")]
    partial class FixSomeProblems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<int>("AL_Id")
                        .HasColumnType("int")
                        .HasColumnName("AirLineId");

                    b.Property<string>("Assistant")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Host1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Host2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Maj_Pilot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MajorPilot");

                    b.Property<string>("Model")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasAlternateKey("AL_Id");

                    b.ToTable("Aircrafts", null, t =>
                        {
                            t.HasCheckConstraint("Aircrat_Capacity", "[Capacity] <= 250");
                        });
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Aircraft_Routes", b =>
                {
                    b.Property<int>("AC_Id")
                        .HasColumnType("int")
                        .HasColumnName("AirCraft_Id");

                    b.Property<int>("Route_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrival")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Num_Of_Pass")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfPassenger");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 3)
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("AC_Id", "Route_Id");

                    b.ToTable("Aircraft_Routes", t =>
                        {
                            t.HasCheckConstraint("AircraftRoutesNumsOfPassenger", "[NumberOfPassenger] between 0 And 250");
                        });
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AirLine_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cont_Person")
                        .HasColumnType("int")
                        .HasColumnName("CountOfPerson");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Airline_phones", b =>
                {
                    b.Property<int>("Al_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Al_Id"));

                    b.Property<string>("Phones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Al_Id");

                    b.ToTable("Airline_phones", t =>
                        {
                            t.HasCheckConstraint("PhoneNumber", "([Phones] IS NULL OR [Phones] LIKE '01%')");
                        });
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Emp_Qualifications", b =>
                {
                    b.Property<int>("Emp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Emp_Id"));

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Emp_Id");

                    b.ToTable(" EmployeeQualifications", (string)null);
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int")
                        .HasColumnName("AirLineId");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("BD_Day")
                        .HasColumnType("int")
                        .HasColumnName("BirthDay");

                    b.Property<int>("BD_Month")
                        .HasColumnType("int")
                        .HasColumnName("BirthMonth");

                    b.Property<int>("BD_Year")
                        .HasColumnType("int")
                        .HasColumnName("BirthYear");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("EmployeeName");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classification")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("EF_Core_2.AirLine_Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int")
                        .HasColumnName("AirLineId");

                    b.Property<int>("Amout")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
